Intern = "re0"  #Device im Internen Netz, bei mir re0
Extern = "tun0"  # Das ppp-Device
IntNet = " >>>IPv4<<< /24" # Adressraum des internen Netzes
RouterIP = " >>>IPv4<<< " # IP Adresse des Routers
Loop = "lo0" # Loopback Device
NoRoute = "/dev/null"

# Adressen die auf dem externen Device nicht geroutet werden
# (Adressbereich des internen Netzes muss man wegen der Weiterleitungen zulassen)
table <NoRoute> { 127.0.0.1/8, 172.16.0.0/12,  >>>IPv4<<< /16, !$IntNet, 10.0.0.0/8, 255.255.255.255/32 }

# Macht Statistiken fuer die Verbindung (pfctl -s info) hier ein DSL Internet Anschluss
set loginterface $Extern

# Ports die wir oeffnen wollen:
#ServicePortsTCP = "{}"  #an dieser Stelle alle Ports eintragen 
# die man nach ausse oeffnen will
# entweder mit Namen (z.B. "ssh") oder als Nummer (z.B. 22) 
# eine Liste der Namen findet ihr unter /etc/services
# Hier die UDP-Ports, z.B. edonkey
#ServicePortsUDP = "{}"  # nach dem gleichen Schema wie oben.

# lokale Ports
tcp_services = "{ 22, 43, 53, 123, 111, 789, 1110, 2049, 2323, 5009, 1512, 445,135,139, 18083}"
udp_services = "{ 53, 123, 111, 1110, 789, 2049, 2323, 5009, 1512, 445,135,139}"

# Beendet inaktive Verbindungen schneller - geringerer Speicherverbrauch.
set optimization aggressive

scrub in on $Extern all fragment reassemble random-id

# NAT aktivieren
# nat on $Extern from $IntNet to any -> tun0 static-port
nat on $Extern from $IntNet to any -> ($Extern) static-port

# Falls Active FTP gewuenscht ist, folgendes Auskommentieren:
# rdr on $Int proto tcp from !$RouterIP to !$IntNet port 21 -> 127.0.0.1 port 8021
rdr-anchor redirect

block on $Extern
block return log on $Extern

# Loopback Device darf alles
pass quick on $Loop
set skip on $Loop

# Interne Ports 
#pass out on $Intern proto tcp to any port $tcp_services
#pass out on $Intern proto udp to any port $udp_services
pass out on $Intern inet to any

# Erschwert scannen mit nmap und co.
block in log quick on $Extern inet proto tcp from any to any flags FUP/FUP
block in log quick on $Extern inet proto tcp from any to any flags SF/SFRA
block in log quick on $Extern inet proto tcp from any to any flags /SFRA

# IP Spoofing verhindern
#block in log quick on $Extern inet from $NoRoute to any
#block in log quick on $Extern inet from any to $NoRoute
antispoof for $Extern inet

# Falls Active FTP gewuenscht wird (empfehlenswert)
# pass in quick on $Extern inet proto tcp from any to any port > 49151 user proxy flags S/SAFR keep state
# Ping akzeptieren (ablehnen ist uebrigends wenig sinnvoll)
pass in quick on $Extern inet proto icmp all icmp-type 8 code 0 keep state

# Ports nach aussen oeffnen
# Die folgenden Regeln nur auskommentieren wenn ihr oben Ports eingetragen habt die geoeffnet werden sollen.
#pass in quick on $Extern inet proto tcp from any to any port $ServicePortsTCP flags S/SAFR keep state label ServicesTCP
#pass in quick on $Extern inet proto tcp from any to any port $ServicePortsUDP flags S/SAFR keep state label ServicesUDP

anchor passin
pass out quick on $Extern keep state
